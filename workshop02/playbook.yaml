
- name: AIPC Day 2 Workshop - Setup server
  hosts: all
  tasks:
  - name: Install all mandatory packages
    apt:
      name: "{{ item }}"
      update_cache: yes
      state: latest
    loop:
    - git
    - ssh
    - ansible
    - packer
    - nginx
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    - curl
    - zip
    - software-properties-common
  - name: Add docker apt key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  - name: Add Repositories APT repo
    apt_repository:
      repo: "{{ item }}"
      state: present
    loop:
    - "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
    - "ppa:ansible/ansible"
  - name: Install docker and ansible
    apt:
      name: "{{ item }}"
      update_cache: yes
      state: latest
    loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - ansible
  - name: Install Hashiecorp tools
    unarchive: 
      remote_src: yes
      mode: "a+x"
      dest: /usr/local/bin
      src: "{{ item }}"
    loop:
    - "https://releases.hashicorp.com/terraform/1.1.0/terraform_1.1.0_linux_amd64.zip"
    - "https://releases.hashicorp.com/packer/1.7.8/packer_1.7.8_linux_amd64.zip"
  - name: Install docker-machine
    get_url:
      url: "https://gitlab-docker-machine-downloads.s3.amazonaws.com/main/index.html"
      dest: /usr/local/bin/docker-machine
      mode: "a+x"
  - name: Create user fred
    user:
      name: fred
      shell: /bin/bash
      state: present
      groups: docker,sudo
      append: yes
  - name: add ssh keys to fred
    authorized_key:
      user: fred
      state: present
      key: "{{ lookup('file', '../../mykey.pub') }}"
  - name: add instructor's SSH key
    authorized_key:
      user: fred
      state: present
      key: https://drive.google.com/u/0/uc?id=17pBBYJhRkyrfVhLu44e23CA2PbeXPuMg&export=download
  - name: List all files in /var/www/html
    find:
      paths: /var/www/html
      recurse: yes
    register: html_files
  - name: echo html_files
    debug:
      msg: ">>> {{ html_files }}"
  - name: delete files from /var/www/html
    file: 
      name: "{{ item.path }}"
      state: absent
    loop: "{{ html_files.files }}"
  - name: copy html file over to server
    copy:
      src: ./nginx-assets/
      dest: /var/www/html/
  - name: start nginx
    systemd:
      name: nginx 
      enabled: true
      state: restarted
  - name: Install all patches
    apt:
      update_cache: yes
      upgrade: yes
      state: latest
  #- name: Reboot server
  #  reboot:


  

